name: "SauronNet"
layer {
  name: "pair_data"
  type: "HDF5Data"
  top: "pair_data"
  top: "sim"
  include {
    phase: TRAIN
  }
  hdf5_data_param {
    source: "train.txt"
    batch_size: 14
  }
}
layer {
  name: "pair_data"
  type: "HDF5Data"
  top: "pair_data"
  top: "sim"
  include {
    phase: TEST
  }
  hdf5_data_param {
    source: "test.txt"
    batch_size: 8
  }
}
# ------------------------------------------ slice layer start ------------------------------------------
layer {
  name: "slice_pair"
  type: "Slice"
  bottom: "pair_data"
  top: "data"
  top: "data_middle"
  top: "data_p"
  slice_param {
    slice_dim: 1
    slice_point: 1
    slice_point: 2
  }
}
layer {
  name: "flat_m"
  type: "Flatten"
  bottom: "data_middle"
  top: "flat_m"
}
layer {
  name: "slice_m"
  type: "Slice"
  bottom: "flat_m"
  top: "m_id"
  top: "m_else"
  slice_param {
    slice_dim: 1
    slice_point: 1
  }
}
###################################### 1 ########################################
# ------------------------------------------ conv layer start ------------------------------------------
layer {
  name: "conv1/7x7_s2"
  type: "Convolution"
  bottom: "data"
  top: "conv1/7x7_s2"
  param {
    name: "conv1/7x7_s2_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "conv1/7x7_s2_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 3
    kernel_size: 7
    stride: 2
    weight_filler {
      type: "xavier"
      std: 0.1
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "conv1/relu_7x7"
  type: "ReLU"
  bottom: "conv1/7x7_s2"
  top: "conv1/7x7_s2"
}
layer {
  name: "pool1/3x3_s2"
  type: "Pooling"
  bottom: "conv1/7x7_s2"
  top: "pool1/3x3_s2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "pool1/norm1"
  type: "LRN"
  bottom: "pool1/3x3_s2"
  top: "pool1/norm1"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "conv2/3x3_reduce"
  type: "Convolution"
  bottom: "pool1/norm1"
  top: "conv2/3x3_reduce"
  param {
    name: "conv2/3x3_reduce_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "conv2/3x3_reduce_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 1
    weight_filler {
      type: "xavier"
      std: 0.1
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "conv2/relu_3x3_reduce"
  type: "ReLU"
  bottom: "conv2/3x3_reduce"
  top: "conv2/3x3_reduce"
}
layer {
  name: "conv2/3x3"
  type: "Convolution"
  bottom: "conv2/3x3_reduce"
  top: "conv2/3x3"
  param {
    name: "conv2/3x3_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "conv2/3x3_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  convolution_param {
    num_output: 192
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
      std: 0.03
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "conv2/relu_3x3"
  type: "ReLU"
  bottom: "conv2/3x3"
  top: "conv2/3x3"
}
layer {
  name: "conv2/norm2"
  type: "LRN"
  bottom: "conv2/3x3"
  top: "conv2/norm2"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "pool2/3x3_s2"
  type: "Pooling"
  bottom: "conv2/norm2"
  top: "pool2/3x3_s2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "inception_3a/1x1"
  type: "Convolution"
  bottom: "pool2/3x3_s2"
  top: "inception_3a/1x1"
  param {
    name: "inception_3a/1x1_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "inception_3a/1x1_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 1
    weight_filler {
      type: "xavier"
      std: 0.03
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_3a/relu_1x1"
  type: "ReLU"
  bottom: "inception_3a/1x1"
  top: "inception_3a/1x1"
}
layer {
  name: "inception_3a/3x3_reduce"
  type: "Convolution"
  bottom: "pool2/3x3_s2"
  top: "inception_3a/3x3_reduce"
  param {
    name: "inception_3a/3x3_reduce_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "inception_3a/3x3_reduce_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    kernel_size: 1
    weight_filler {
      type: "xavier"
      std: 0.09
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_3a/relu_3x3_reduce"
  type: "ReLU"
  bottom: "inception_3a/3x3_reduce"
  top: "inception_3a/3x3_reduce"
}
layer {
  name: "inception_3a/3x3"
  type: "Convolution"
  bottom: "inception_3a/3x3_reduce"
  top: "inception_3a/3x3"
  param {
    name: "inception_3a/3x3_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "inception_3a/3x3_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
      std: 0.03
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_3a/relu_3x3"
  type: "ReLU"
  bottom: "inception_3a/3x3"
  top: "inception_3a/3x3"
}
layer {
  name: "inception_3a/5x5_reduce"
  type: "Convolution"
  bottom: "pool2/3x3_s2"
  top: "inception_3a/5x5_reduce"
  param {
    name: "inception_3a/5x5_reduce_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "inception_3a/5x5_reduce_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 1
    weight_filler {
      type: "xavier"
      std: 0.2
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_3a/relu_5x5_reduce"
  type: "ReLU"
  bottom: "inception_3a/5x5_reduce"
  top: "inception_3a/5x5_reduce"
}
layer {
  name: "inception_3a/5x5"
  type: "Convolution"
  bottom: "inception_3a/5x5_reduce"
  top: "inception_3a/5x5"
  param {
    name: "inception_3a/5x5_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "inception_3a/5x5_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    pad: 2
    kernel_size: 5
    weight_filler {
      type: "xavier"
      std: 0.03
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_3a/relu_5x5"
  type: "ReLU"
  bottom: "inception_3a/5x5"
  top: "inception_3a/5x5"
}
layer {
  name: "inception_3a/pool"
  type: "Pooling"
  bottom: "pool2/3x3_s2"
  top: "inception_3a/pool"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 1
    pad: 1
  }
}
layer {
  name: "inception_3a/pool_proj"
  type: "Convolution"
  bottom: "inception_3a/pool"
  top: "inception_3a/pool_proj"
  param {
    name: "inception_3a/pool_proj_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "inception_3a/pool_proj_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 1
    weight_filler {
      type: "xavier"
      std: 0.1
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_3a/relu_pool_proj"
  type: "ReLU"
  bottom: "inception_3a/pool_proj"
  top: "inception_3a/pool_proj"
}
layer {
  name: "inception_3a/output"
  type: "Concat"
  bottom: "inception_3a/1x1"
  bottom: "inception_3a/3x3"
  bottom: "inception_3a/5x5"
  bottom: "inception_3a/pool_proj"
  top: "inception_3a/output"
}
layer {
  name: "inception_3b/1x1"
  type: "Convolution"
  bottom: "inception_3a/output"
  top: "inception_3b/1x1"
  param {
    name: "inception_3b/1x1_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "inception_3b/1x1_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    kernel_size: 1
    weight_filler {
      type: "xavier"
      std: 0.03
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_3b/relu_1x1"
  type: "ReLU"
  bottom: "inception_3b/1x1"
  top: "inception_3b/1x1"
}
layer {
  name: "inception_3b/3x3_reduce"
  type: "Convolution"
  bottom: "inception_3a/output"
  top: "inception_3b/3x3_reduce"
  param {
    name: "inception_3b/3x3_reduce_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "inception_3b/3x3_reduce_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    kernel_size: 1
    weight_filler {
      type: "xavier"
      std: 0.09
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_3b/relu_3x3_reduce"
  type: "ReLU"
  bottom: "inception_3b/3x3_reduce"
  top: "inception_3b/3x3_reduce"
}
layer {
  name: "inception_3b/3x3"
  type: "Convolution"
  bottom: "inception_3b/3x3_reduce"
  top: "inception_3b/3x3"
  param {
    name: "inception_3b/3x3_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "inception_3b/3x3_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  convolution_param {
    num_output: 192
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
      std: 0.03
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_3b/relu_3x3"
  type: "ReLU"
  bottom: "inception_3b/3x3"
  top: "inception_3b/3x3"
}
layer {
  name: "inception_3b/5x5_reduce"
  type: "Convolution"
  bottom: "inception_3a/output"
  top: "inception_3b/5x5_reduce"
  param {
    name: "inception_3b/5x5_reduce_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "inception_3b/5x5_reduce_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 1
    weight_filler {
      type: "xavier"
      std: 0.2
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_3b/relu_5x5_reduce"
  type: "ReLU"
  bottom: "inception_3b/5x5_reduce"
  top: "inception_3b/5x5_reduce"
}
layer {
  name: "inception_3b/5x5"
  type: "Convolution"
  bottom: "inception_3b/5x5_reduce"
  top: "inception_3b/5x5"
  param {
    name: "inception_3b/5x5_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "inception_3b/5x5_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    pad: 2
    kernel_size: 5
    weight_filler {
      type: "xavier"
      std: 0.03
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_3b/relu_5x5"
  type: "ReLU"
  bottom: "inception_3b/5x5"
  top: "inception_3b/5x5"
}
layer {
  name: "inception_3b/pool"
  type: "Pooling"
  bottom: "inception_3a/output"
  top: "inception_3b/pool"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 1
    pad: 1
  }
}
layer {
  name: "inception_3b/pool_proj"
  type: "Convolution"
  bottom: "inception_3b/pool"
  top: "inception_3b/pool_proj"
  param {
    name: "inception_3b/pool_proj_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "inception_3b/pool_proj_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 1
    weight_filler {
      type: "xavier"
      std: 0.1
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_3b/relu_pool_proj"
  type: "ReLU"
  bottom: "inception_3b/pool_proj"
  top: "inception_3b/pool_proj"
}
layer {
  name: "inception_3b/output"
  type: "Concat"
  bottom: "inception_3b/1x1"
  bottom: "inception_3b/3x3"
  bottom: "inception_3b/5x5"
  bottom: "inception_3b/pool_proj"
  top: "inception_3b/output"
}
layer {
  name: "pool3/3x3_s2"
  type: "Pooling"
  bottom: "inception_3b/output"
  top: "pool3/3x3_s2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "inception_4a/1x1"
  type: "Convolution"
  bottom: "pool3/3x3_s2"
  top: "inception_4a/1x1"
  param {
    name: "inception_4a/1x1_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "inception_4a/1x1_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  convolution_param {
    num_output: 192
    kernel_size: 1
    weight_filler {
      type: "xavier"
      std: 0.03
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4a/relu_1x1"
  type: "ReLU"
  bottom: "inception_4a/1x1"
  top: "inception_4a/1x1"
}
layer {
  name: "inception_4a/3x3_reduce"
  type: "Convolution"
  bottom: "pool3/3x3_s2"
  top: "inception_4a/3x3_reduce"
  param {
    name: "inception_4a/3x3_reduce_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "inception_4a/3x3_reduce_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    kernel_size: 1
    weight_filler {
      type: "xavier"
      std: 0.09
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4a/relu_3x3_reduce"
  type: "ReLU"
  bottom: "inception_4a/3x3_reduce"
  top: "inception_4a/3x3_reduce"
}
layer {
  name: "inception_4a/3x3"
  type: "Convolution"
  bottom: "inception_4a/3x3_reduce"
  top: "inception_4a/3x3"
  param {
    name: "inception_4a/3x3_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "inception_4a/3x3_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  convolution_param {
    num_output: 208
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
      std: 0.03
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4a/relu_3x3"
  type: "ReLU"
  bottom: "inception_4a/3x3"
  top: "inception_4a/3x3"
}
layer {
  name: "inception_4a/5x5_reduce"
  type: "Convolution"
  bottom: "pool3/3x3_s2"
  top: "inception_4a/5x5_reduce"
  param {
    name: "inception_4a/5x5_reduce_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "inception_4a/5x5_reduce_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 1
    weight_filler {
      type: "xavier"
      std: 0.2
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4a/relu_5x5_reduce"
  type: "ReLU"
  bottom: "inception_4a/5x5_reduce"
  top: "inception_4a/5x5_reduce"
}
layer {
  name: "inception_4a/5x5"
  type: "Convolution"
  bottom: "inception_4a/5x5_reduce"
  top: "inception_4a/5x5"
  param {
    name: "inception_4a/5x5_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "inception_4a/5x5_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  convolution_param {
    num_output: 48
    pad: 2
    kernel_size: 5
    weight_filler {
      type: "xavier"
      std: 0.03
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4a/relu_5x5"
  type: "ReLU"
  bottom: "inception_4a/5x5"
  top: "inception_4a/5x5"
}
layer {
  name: "inception_4a/pool"
  type: "Pooling"
  bottom: "pool3/3x3_s2"
  top: "inception_4a/pool"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 1
    pad: 1
  }
}
layer {
  name: "inception_4a/pool_proj"
  type: "Convolution"
  bottom: "inception_4a/pool"
  top: "inception_4a/pool_proj"
  param {
    name: "inception_4a/pool_proj_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "inception_4a/pool_proj_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 1
    weight_filler {
      type: "xavier"
      std: 0.1
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4a/relu_pool_proj"
  type: "ReLU"
  bottom: "inception_4a/pool_proj"
  top: "inception_4a/pool_proj"
}
layer {
  name: "inception_4a/output"
  type: "Concat"
  bottom: "inception_4a/1x1"
  bottom: "inception_4a/3x3"
  bottom: "inception_4a/5x5"
  bottom: "inception_4a/pool_proj"
  top: "inception_4a/output"
}
layer {
  name: "loss1/ave_pool"
  type: "Pooling"
  bottom: "inception_4a/output"
  top: "loss1/ave_pool"
  pooling_param {
    pool: AVE
    kernel_size: 5
    stride: 3
  }
}
layer {
  name: "loss1/conv"
  type: "Convolution"
  bottom: "loss1/ave_pool"
  top: "loss1/conv"
  param {
    name: "loss1/conv_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "loss1/conv_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    kernel_size: 1
    weight_filler {
      type: "xavier"
      std: 0.08
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "loss1/relu_conv"
  type: "ReLU"
  bottom: "loss1/conv"
  top: "loss1/conv"
}
layer {
  name: "loss1/fc"
  type: "InnerProduct"
  bottom: "loss1/conv"
  top: "loss1/fc"
  param {
    name: "loss1/fc_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "loss1/fc_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  inner_product_param {
    num_output: 1024
    weight_filler {
      type: "xavier"
      std: 0.02
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "loss1/relu_fc"
  type: "ReLU"
  bottom: "loss1/fc"
  top: "loss1/fc"
}
layer {
  name: "loss1/drop_fc"
  type: "Dropout"
  bottom: "loss1/fc"
  top: "loss1/fc"
  dropout_param {
    dropout_ratio: 0.7
  }
}
layer {
  name: "loss1/classifier"
  type: "InnerProduct"
  bottom: "loss1/fc"
  top: "loss1/classifier"
  param {
    name: "loss1/classifier_w"
    lr_mult: 1 # id first
    decay_mult: 1
  }
  param {
    name: "loss1/classifier_b"
    lr_mult: 2 # id second
    decay_mult: 0
  }
  inner_product_param {
    num_output: 128
    weight_filler {
      type: "xavier"
      std: 0.00009765625
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "deepid_1"
  type: "TanH"
  bottom: "loss1/classifier"
  top: "deepid_1"
}
layer {
  name: "inception_4b/1x1"
  type: "Convolution"
  bottom: "inception_4a/output"
  top: "inception_4b/1x1"
  param {
    name: "inception_4b/1x1_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "inception_4b/1x1_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  convolution_param {
    num_output: 160
    kernel_size: 1
    weight_filler {
      type: "xavier"
      std: 0.03
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4b/relu_1x1"
  type: "ReLU"
  bottom: "inception_4b/1x1"
  top: "inception_4b/1x1"
}
layer {
  name: "inception_4b/3x3_reduce"
  type: "Convolution"
  bottom: "inception_4a/output"
  top: "inception_4b/3x3_reduce"
  param {
    name: "inception_4b/3x3_reduce_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "inception_4b/3x3_reduce_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  convolution_param {
    num_output: 112
    kernel_size: 1
    weight_filler {
      type: "xavier"
      std: 0.09
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4b/relu_3x3_reduce"
  type: "ReLU"
  bottom: "inception_4b/3x3_reduce"
  top: "inception_4b/3x3_reduce"
}
layer {
  name: "inception_4b/3x3"
  type: "Convolution"
  bottom: "inception_4b/3x3_reduce"
  top: "inception_4b/3x3"
  param {
    name: "inception_4b/3x3_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "inception_4b/3x3_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  convolution_param {
    num_output: 224
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
      std: 0.03
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4b/relu_3x3"
  type: "ReLU"
  bottom: "inception_4b/3x3"
  top: "inception_4b/3x3"
}
layer {
  name: "inception_4b/5x5_reduce"
  type: "Convolution"
  bottom: "inception_4a/output"
  top: "inception_4b/5x5_reduce"
  param {
    name: "inception_4b/5x5_reduce_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "inception_4b/5x5_reduce_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  convolution_param {
    num_output: 24
    kernel_size: 1
    weight_filler {
      type: "xavier"
      std: 0.2
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4b/relu_5x5_reduce"
  type: "ReLU"
  bottom: "inception_4b/5x5_reduce"
  top: "inception_4b/5x5_reduce"
}
layer {
  name: "inception_4b/5x5"
  type: "Convolution"
  bottom: "inception_4b/5x5_reduce"
  top: "inception_4b/5x5"
  param {
    name: "inception_4b/5x5_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "inception_4b/5x5_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 2
    kernel_size: 5
    weight_filler {
      type: "xavier"
      std: 0.03
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4b/relu_5x5"
  type: "ReLU"
  bottom: "inception_4b/5x5"
  top: "inception_4b/5x5"
}
layer {
  name: "inception_4b/pool"
  type: "Pooling"
  bottom: "inception_4a/output"
  top: "inception_4b/pool"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 1
    pad: 1
  }
}
layer {
  name: "inception_4b/pool_proj"
  type: "Convolution"
  bottom: "inception_4b/pool"
  top: "inception_4b/pool_proj"
  param {
    name: "inception_4b/pool_proj_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "inception_4b/pool_proj_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 1
    weight_filler {
      type: "xavier"
      std: 0.1
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4b/relu_pool_proj"
  type: "ReLU"
  bottom: "inception_4b/pool_proj"
  top: "inception_4b/pool_proj"
}
layer {
  name: "inception_4b/output"
  type: "Concat"
  bottom: "inception_4b/1x1"
  bottom: "inception_4b/3x3"
  bottom: "inception_4b/5x5"
  bottom: "inception_4b/pool_proj"
  top: "inception_4b/output"
}
layer {
  name: "inception_4c/1x1"
  type: "Convolution"
  bottom: "inception_4b/output"
  top: "inception_4c/1x1"
  param {
    name: "inception_4c/1x1_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "inception_4c/1x1_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    kernel_size: 1
    weight_filler {
      type: "xavier"
      std: 0.03
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4c/relu_1x1"
  type: "ReLU"
  bottom: "inception_4c/1x1"
  top: "inception_4c/1x1"
}
layer {
  name: "inception_4c/3x3_reduce"
  type: "Convolution"
  bottom: "inception_4b/output"
  top: "inception_4c/3x3_reduce"
  param {
    name: "inception_4c/3x3_reduce_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "inception_4c/3x3_reduce_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    kernel_size: 1
    weight_filler {
      type: "xavier"
      std: 0.09
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4c/relu_3x3_reduce"
  type: "ReLU"
  bottom: "inception_4c/3x3_reduce"
  top: "inception_4c/3x3_reduce"
}
layer {
  name: "inception_4c/3x3"
  type: "Convolution"
  bottom: "inception_4c/3x3_reduce"
  top: "inception_4c/3x3"
  param {
    name: "inception_4c/3x3_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "inception_4c/3x3_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
      std: 0.03
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4c/relu_3x3"
  type: "ReLU"
  bottom: "inception_4c/3x3"
  top: "inception_4c/3x3"
}
layer {
  name: "inception_4c/5x5_reduce"
  type: "Convolution"
  bottom: "inception_4b/output"
  top: "inception_4c/5x5_reduce"
  param {
    name: "inception_4c/5x5_reduce_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "inception_4c/5x5_reduce_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  convolution_param {
    num_output: 24
    kernel_size: 1
    weight_filler {
      type: "xavier"
      std: 0.2
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4c/relu_5x5_reduce"
  type: "ReLU"
  bottom: "inception_4c/5x5_reduce"
  top: "inception_4c/5x5_reduce"
}
layer {
  name: "inception_4c/5x5"
  type: "Convolution"
  bottom: "inception_4c/5x5_reduce"
  top: "inception_4c/5x5"
  param {
    name: "inception_4c/5x5_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "inception_4c/5x5_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 2
    kernel_size: 5
    weight_filler {
      type: "xavier"
      std: 0.03
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4c/relu_5x5"
  type: "ReLU"
  bottom: "inception_4c/5x5"
  top: "inception_4c/5x5"
}
layer {
  name: "inception_4c/pool"
  type: "Pooling"
  bottom: "inception_4b/output"
  top: "inception_4c/pool"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 1
    pad: 1
  }
}
layer {
  name: "inception_4c/pool_proj"
  type: "Convolution"
  bottom: "inception_4c/pool"
  top: "inception_4c/pool_proj"
  param {
    name: "inception_4c/pool_proj_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "inception_4c/pool_proj_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 1
    weight_filler {
      type: "xavier"
      std: 0.1
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4c/relu_pool_proj"
  type: "ReLU"
  bottom: "inception_4c/pool_proj"
  top: "inception_4c/pool_proj"
}
layer {
  name: "inception_4c/output"
  type: "Concat"
  bottom: "inception_4c/1x1"
  bottom: "inception_4c/3x3"
  bottom: "inception_4c/5x5"
  bottom: "inception_4c/pool_proj"
  top: "inception_4c/output"
}
layer {
  name: "inception_4d/1x1"
  type: "Convolution"
  bottom: "inception_4c/output"
  top: "inception_4d/1x1"
  param {
    name: "inception_4d/1x1_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "inception_4d/1x1_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  convolution_param {
    num_output: 112
    kernel_size: 1
    weight_filler {
      type: "xavier"
      std: 0.03
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4d/relu_1x1"
  type: "ReLU"
  bottom: "inception_4d/1x1"
  top: "inception_4d/1x1"
}
layer {
  name: "inception_4d/3x3_reduce"
  type: "Convolution"
  bottom: "inception_4c/output"
  top: "inception_4d/3x3_reduce"
  param {
    name: "inception_4d/3x3_reduce_w" 
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "inception_4d/3x3_reduce_b" 
    lr_mult: 2 # second
    decay_mult: 0
  }
  convolution_param {
    num_output: 144
    kernel_size: 1
    weight_filler {
      type: "xavier"
      std: 0.09
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4d/relu_3x3_reduce"
  type: "ReLU"
  bottom: "inception_4d/3x3_reduce"
  top: "inception_4d/3x3_reduce"
}
layer {
  name: "inception_4d/3x3"
  type: "Convolution"
  bottom: "inception_4d/3x3_reduce"
  top: "inception_4d/3x3"
  param {
    name: "inception_4d/3x3_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "inception_4d/3x3_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  convolution_param {
    num_output: 288
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
      std: 0.03
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4d/relu_3x3"
  type: "ReLU"
  bottom: "inception_4d/3x3"
  top: "inception_4d/3x3"
}
layer {
  name: "inception_4d/5x5_reduce"
  type: "Convolution"
  bottom: "inception_4c/output"
  top: "inception_4d/5x5_reduce"
  param {
    name: "inception_4d/5x5_reduce_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "inception_4d/5x5_reduce_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 1
    weight_filler {
      type: "xavier"
      std: 0.2
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4d/relu_5x5_reduce"
  type: "ReLU"
  bottom: "inception_4d/5x5_reduce"
  top: "inception_4d/5x5_reduce"
}
layer {
  name: "inception_4d/5x5"
  type: "Convolution"
  bottom: "inception_4d/5x5_reduce"
  top: "inception_4d/5x5"
  param {
    name: "inception_4d/5x5_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "inception_4d/5x5_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 2
    kernel_size: 5
    weight_filler {
      type: "xavier"
      std: 0.03
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4d/relu_5x5"
  type: "ReLU"
  bottom: "inception_4d/5x5"
  top: "inception_4d/5x5"
}
layer {
  name: "inception_4d/pool"
  type: "Pooling"
  bottom: "inception_4c/output"
  top: "inception_4d/pool"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 1
    pad: 1
  }
}
layer {
  name: "inception_4d/pool_proj"
  type: "Convolution"
  bottom: "inception_4d/pool"
  top: "inception_4d/pool_proj"
  param {
    name: "inception_4d/pool_proj_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "inception_4d/pool_proj_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 1
    weight_filler {
      type: "xavier"
      std: 0.1
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4d/relu_pool_proj"
  type: "ReLU"
  bottom: "inception_4d/pool_proj"
  top: "inception_4d/pool_proj"
}
layer {
  name: "inception_4d/output"
  type: "Concat"
  bottom: "inception_4d/1x1"
  bottom: "inception_4d/3x3"
  bottom: "inception_4d/5x5"
  bottom: "inception_4d/pool_proj"
  top: "inception_4d/output"
}
layer {
  name: "loss2/ave_pool"
  type: "Pooling"
  bottom: "inception_4d/output"
  top: "loss2/ave_pool"
  pooling_param {
    pool: AVE
    kernel_size: 5
    stride: 3
  }
}
layer {
  name: "loss2/conv"
  type: "Convolution"
  bottom: "loss2/ave_pool"
  top: "loss2/conv"
  param {
    name: "loss2/conv_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "loss2/conv_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    kernel_size: 1
    weight_filler {
      type: "xavier"
      std: 0.08
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "loss2/relu_conv"
  type: "ReLU"
  bottom: "loss2/conv"
  top: "loss2/conv"
}
layer {
  name: "loss2/fc"
  type: "InnerProduct"
  bottom: "loss2/conv"
  top: "loss2/fc"
  param {
    name: "loss2/fc_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "loss2/fc_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  inner_product_param {
    num_output: 1024
    weight_filler {
      type: "xavier"
      std: 0.02
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "loss2/relu_fc"
  type: "ReLU"
  bottom: "loss2/fc"
  top: "loss2/fc"
}
layer {
  name: "loss2/drop_fc"
  type: "Dropout"
  bottom: "loss2/fc"
  top: "loss2/fc"
  dropout_param {
    dropout_ratio: 0.7
  }
}
layer {
  name: "loss2/classifier"
  type: "InnerProduct"
  bottom: "loss2/fc"
  top: "loss2/classifier"
  param {
    name: "loss2/classifier_w"
    lr_mult: 1 # id first
    decay_mult: 1
  }
  param {
    name: "loss2/classifier_b"
    lr_mult: 2 # id second
    decay_mult: 0
  }
  inner_product_param {
    num_output: 128
    weight_filler {
      type: "xavier"
      std: 0.00009765625
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "deepid_2"
  type: "TanH"
  bottom: "loss2/classifier"
  top: "deepid_2"
}
layer {
  name: "inception_4e/1x1"
  type: "Convolution"
  bottom: "inception_4d/output"
  top: "inception_4e/1x1"
  param {
    name: "inception_4e/1x1_w"
    lr_mult: 1 # id first
    decay_mult: 1
  }
  param {
    name: "inception_4e/1x1_b"
    lr_mult: 2 # id second
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    kernel_size: 1
    weight_filler {
      type: "xavier"
      std: 0.03
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4e/relu_1x1"
  type: "ReLU"
  bottom: "inception_4e/1x1"
  top: "inception_4e/1x1"
}
layer {
  name: "inception_4e/3x3_reduce"
  type: "Convolution"
  bottom: "inception_4d/output"
  top: "inception_4e/3x3_reduce"
  param {
    name: "inception_4e/3x3_reduce_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "inception_4e/3x3_reduce_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  convolution_param {
    num_output: 160
    kernel_size: 1
    weight_filler {
      type: "xavier"
      std: 0.09
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4e/relu_3x3_reduce"
  type: "ReLU"
  bottom: "inception_4e/3x3_reduce"
  top: "inception_4e/3x3_reduce"
}
layer {
  name: "inception_4e/3x3"
  type: "Convolution"
  bottom: "inception_4e/3x3_reduce"
  top: "inception_4e/3x3"
  param {
    name: "inception_4e/3x3_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "inception_4e/3x3_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  convolution_param {
    num_output: 320
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
      std: 0.03
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4e/relu_3x3"
  type: "ReLU"
  bottom: "inception_4e/3x3"
  top: "inception_4e/3x3"
}
layer {
  name: "inception_4e/5x5_reduce"
  type: "Convolution"
  bottom: "inception_4d/output"
  top: "inception_4e/5x5_reduce"
  param {
    name: "inception_4e/5x5_reduce_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "inception_4e/5x5_reduce_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 1
    weight_filler {
      type: "xavier"
      std: 0.2
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4e/relu_5x5_reduce"
  type: "ReLU"
  bottom: "inception_4e/5x5_reduce"
  top: "inception_4e/5x5_reduce"
}
layer {
  name: "inception_4e/5x5"
  type: "Convolution"
  bottom: "inception_4e/5x5_reduce"
  top: "inception_4e/5x5"
  param {
    name: "inception_4e/5x5_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "inception_4e/5x5_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 2
    kernel_size: 5
    weight_filler {
      type: "xavier"
      std: 0.03
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4e/relu_5x5"
  type: "ReLU"
  bottom: "inception_4e/5x5"
  top: "inception_4e/5x5"
}
layer {
  name: "inception_4e/pool"
  type: "Pooling"
  bottom: "inception_4d/output"
  top: "inception_4e/pool"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 1
    pad: 1
  }
}
layer {
  name: "inception_4e/pool_proj"
  type: "Convolution"
  bottom: "inception_4e/pool"
  top: "inception_4e/pool_proj"
  param {
    name: "inception_4e/pool_proj_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "inception_4e/pool_proj_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    kernel_size: 1
    weight_filler {
      type: "xavier"
      std: 0.1
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4e/relu_pool_proj"
  type: "ReLU"
  bottom: "inception_4e/pool_proj"
  top: "inception_4e/pool_proj"
}
layer {
  name: "inception_4e/output"
  type: "Concat"
  bottom: "inception_4e/1x1"
  bottom: "inception_4e/3x3"
  bottom: "inception_4e/5x5"
  bottom: "inception_4e/pool_proj"
  top: "inception_4e/output"
}
layer {
  name: "pool4/3x3_s2"
  type: "Pooling"
  bottom: "inception_4e/output"
  top: "pool4/3x3_s2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "inception_5a/1x1"
  type: "Convolution"
  bottom: "pool4/3x3_s2"
  top: "inception_5a/1x1"
  param {
    name: "inception_5a/1x1_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "inception_5a/1x1_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    kernel_size: 1
    weight_filler {
      type: "xavier"
      std: 0.03
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_5a/relu_1x1"
  type: "ReLU"
  bottom: "inception_5a/1x1"
  top: "inception_5a/1x1"
}
layer {
  name: "inception_5a/3x3_reduce"
  type: "Convolution"
  bottom: "pool4/3x3_s2"
  top: "inception_5a/3x3_reduce"
  param {
    name: "inception_5a/3x3_reduce_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "inception_5a/3x3_reduce_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  convolution_param {
    num_output: 160
    kernel_size: 1
    weight_filler {
      type: "xavier"
      std: 0.09
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_5a/relu_3x3_reduce"
  type: "ReLU"
  bottom: "inception_5a/3x3_reduce"
  top: "inception_5a/3x3_reduce"
}
layer {
  name: "inception_5a/3x3"
  type: "Convolution"
  bottom: "inception_5a/3x3_reduce"
  top: "inception_5a/3x3"
  param {
    name: "inception_5a/3x3_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "inception_5a/3x3_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  convolution_param {
    num_output: 320
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
      std: 0.03
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_5a/relu_3x3"
  type: "ReLU"
  bottom: "inception_5a/3x3"
  top: "inception_5a/3x3"
}
layer {
  name: "inception_5a/5x5_reduce"
  type: "Convolution"
  bottom: "pool4/3x3_s2"
  top: "inception_5a/5x5_reduce"
  param {
    name: "inception_5a/5x5_reduce_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "inception_5a/5x5_reduce_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 1
    weight_filler {
      type: "xavier"
      std: 0.2
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_5a/relu_5x5_reduce"
  type: "ReLU"
  bottom: "inception_5a/5x5_reduce"
  top: "inception_5a/5x5_reduce"
}
layer {
  name: "inception_5a/5x5"
  type: "Convolution"
  bottom: "inception_5a/5x5_reduce"
  top: "inception_5a/5x5"
  param {
    name: "inception_5a/5x5_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "inception_5a/5x5_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 2
    kernel_size: 5
    weight_filler {
      type: "xavier"
      std: 0.03
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_5a/relu_5x5"
  type: "ReLU"
  bottom: "inception_5a/5x5"
  top: "inception_5a/5x5"
}
layer {
  name: "inception_5a/pool"
  type: "Pooling"
  bottom: "pool4/3x3_s2"
  top: "inception_5a/pool"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 1
    pad: 1
  }
}
layer {
  name: "inception_5a/pool_proj"
  type: "Convolution"
  bottom: "inception_5a/pool"
  top: "inception_5a/pool_proj"
  param {
    name: "inception_5a/pool_proj_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "inception_5a/pool_proj_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    kernel_size: 1
    weight_filler {
      type: "xavier"
      std: 0.1
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_5a/relu_pool_proj"
  type: "ReLU"
  bottom: "inception_5a/pool_proj"
  top: "inception_5a/pool_proj"
}
layer {
  name: "inception_5a/output"
  type: "Concat"
  bottom: "inception_5a/1x1"
  bottom: "inception_5a/3x3"
  bottom: "inception_5a/5x5"
  bottom: "inception_5a/pool_proj"
  top: "inception_5a/output"
}
layer {
  name: "inception_5b/1x1"
  type: "Convolution"
  bottom: "inception_5a/output"
  top: "inception_5b/1x1"
  param {
    name: "inception_5b/1x1_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "inception_5b/1x1_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    kernel_size: 1
    weight_filler {
      type: "xavier"
      std: 0.03
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_5b/relu_1x1"
  type: "ReLU"
  bottom: "inception_5b/1x1"
  top: "inception_5b/1x1"
}
layer {
  name: "inception_5b/3x3_reduce"
  type: "Convolution"
  bottom: "inception_5a/output"
  top: "inception_5b/3x3_reduce"
  param {
    name: "inception_5b/3x3_reduce_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "inception_5b/3x3_reduce_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  convolution_param {
    num_output: 192
    kernel_size: 1
    weight_filler {
      type: "xavier"
      std: 0.09
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_5b/relu_3x3_reduce"
  type: "ReLU"
  bottom: "inception_5b/3x3_reduce"
  top: "inception_5b/3x3_reduce"
}
layer {
  name: "inception_5b/3x3"
  type: "Convolution"
  bottom: "inception_5b/3x3_reduce"
  top: "inception_5b/3x3"
  param {
    name: "inception_5b/3x3_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "inception_5b/3x3_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
      std: 0.03
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_5b/relu_3x3"
  type: "ReLU"
  bottom: "inception_5b/3x3"
  top: "inception_5b/3x3"
}
layer {
  name: "inception_5b/5x5_reduce"
  type: "Convolution"
  bottom: "inception_5a/output"
  top: "inception_5b/5x5_reduce"
  param {
    name: "inception_5b/5x5_reduce_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "inception_5b/5x5_reduce_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  convolution_param {
    num_output: 48
    kernel_size: 1
    weight_filler {
      type: "xavier"
      std: 0.2
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_5b/relu_5x5_reduce"
  type: "ReLU"
  bottom: "inception_5b/5x5_reduce"
  top: "inception_5b/5x5_reduce"
}
layer {
  name: "inception_5b/5x5"
  type: "Convolution"
  bottom: "inception_5b/5x5_reduce"
  top: "inception_5b/5x5"
  param {
    name: "inception_5b/5x5_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "inception_5b/5x5_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 2
    kernel_size: 5
    weight_filler {
      type: "xavier"
      std: 0.03
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_5b/relu_5x5"
  type: "ReLU"
  bottom: "inception_5b/5x5"
  top: "inception_5b/5x5"
}
layer {
  name: "inception_5b/pool"
  type: "Pooling"
  bottom: "inception_5a/output"
  top: "inception_5b/pool"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 1
    pad: 1
  }
}
layer {
  name: "inception_5b/pool_proj"
  type: "Convolution"
  bottom: "inception_5b/pool"
  top: "inception_5b/pool_proj"
  param {
    name: "inception_5b/pool_proj_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "inception_5b/pool_proj_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    kernel_size: 1
    weight_filler {
      type: "xavier"
      std: 0.1
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_5b/relu_pool_proj"
  type: "ReLU"
  bottom: "inception_5b/pool_proj"
  top: "inception_5b/pool_proj"
}
layer {
  name: "inception_5b/output"
  type: "Concat"
  bottom: "inception_5b/1x1"
  bottom: "inception_5b/3x3"
  bottom: "inception_5b/5x5"
  bottom: "inception_5b/pool_proj"
  top: "inception_5b/output"
}
layer {
  name: "pool5/7x7_s1"
  type: "Pooling"
  bottom: "inception_5b/output"
  top: "pool5/7x7_s1"
  pooling_param {
    pool: AVE
    kernel_size: 7
    stride: 1
  }
}
layer {
  name: "pool5/drop_7x7_s1"
  type: "Dropout"
  bottom: "pool5/7x7_s1"
  top: "pool5/7x7_s1"
  dropout_param {
    dropout_ratio: 0.4
  }
}
layer {
  name: "deepid_base512"
  type: "InnerProduct"
  bottom: "pool5/7x7_s1"
  top: "deepid_base512"
  param {
    name: "id_w"
    lr_mult: 1 # id first
    decay_mult: 1
  }
  param {
    name: "id_b"
    lr_mult: 2 # id second
    decay_mult: 0
  }
  inner_product_param {
    num_output: 512
    weight_filler {
      type: "xavier"
      std: 0.00009765625
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "deepid_encode512"
  type: "TanH"
  bottom: "deepid_base512"
  top: "deepid_encode512"
}

###################################### 2 ########################################
# ------------------------------------------ conv layer start ------------------------------------------
layer {
  name: "conv1/7x7_s2_p"
  type: "Convolution"
  bottom: "data_p"
  top: "conv1/7x7_s2_p"
  param {
    name: "conv1/7x7_s2_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "conv1/7x7_s2_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 3
    kernel_size: 7
    stride: 2
    weight_filler {
      type: "xavier"
      std: 0.1
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "conv1/relu_7x7_p"
  type: "ReLU"
  bottom: "conv1/7x7_s2_p"
  top: "conv1/7x7_s2_p"
}
layer {
  name: "pool1/3x3_s2_p"
  type: "Pooling"
  bottom: "conv1/7x7_s2_p"
  top: "pool1/3x3_s2_p"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "pool1/norm1_p"
  type: "LRN"
  bottom: "pool1/3x3_s2_p"
  top: "pool1/norm1_p"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "conv2/3x3_reduce_p"
  type: "Convolution"
  bottom: "pool1/norm1_p"
  top: "conv2/3x3_reduce_p"
  param {
    name: "conv2/3x3_reduce_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "conv2/3x3_reduce_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 1
    weight_filler {
      type: "xavier"
      std: 0.1
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "conv2/relu_3x3_reduce_p"
  type: "ReLU"
  bottom: "conv2/3x3_reduce_p"
  top: "conv2/3x3_reduce_p"
}
layer {
  name: "conv2/3x3_p"
  type: "Convolution"
  bottom: "conv2/3x3_reduce_p"
  top: "conv2/3x3_p"
  param {
    name: "conv2/3x3_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "conv2/3x3_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  convolution_param {
    num_output: 192
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
      std: 0.03
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "conv2/relu_3x3_p"
  type: "ReLU"
  bottom: "conv2/3x3_p"
  top: "conv2/3x3_p"
}
layer {
  name: "conv2/norm2_p"
  type: "LRN"
  bottom: "conv2/3x3_p"
  top: "conv2/norm2_p"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "pool2/3x3_s2_p"
  type: "Pooling"
  bottom: "conv2/norm2_p"
  top: "pool2/3x3_s2_p"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "inception_3a/1x1_p"
  type: "Convolution"
  bottom: "pool2/3x3_s2_p"
  top: "inception_3a/1x1_p"
  param {
    name: "inception_3a/1x1_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "inception_3a/1x1_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 1
    weight_filler {
      type: "xavier"
      std: 0.03
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_3a/relu_1x1_p"
  type: "ReLU"
  bottom: "inception_3a/1x1_p"
  top: "inception_3a/1x1_p"
}
layer {
  name: "inception_3a/3x3_reduce_p"
  type: "Convolution"
  bottom: "pool2/3x3_s2_p"
  top: "inception_3a/3x3_reduce_p"
  param {
    name: "inception_3a/3x3_reduce_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "inception_3a/3x3_reduce_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    kernel_size: 1
    weight_filler {
      type: "xavier"
      std: 0.09
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_3a/relu_3x3_reduce_p"
  type: "ReLU"
  bottom: "inception_3a/3x3_reduce_p"
  top: "inception_3a/3x3_reduce_p"
}
layer {
  name: "inception_3a/3x3_p"
  type: "Convolution"
  bottom: "inception_3a/3x3_reduce_p"
  top: "inception_3a/3x3_p"
  param {
    name: "inception_3a/3x3_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "inception_3a/3x3_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
      std: 0.03
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_3a/relu_3x3_p"
  type: "ReLU"
  bottom: "inception_3a/3x3_p"
  top: "inception_3a/3x3_p"
}
layer {
  name: "inception_3a/5x5_reduce_p"
  type: "Convolution"
  bottom: "pool2/3x3_s2_p"
  top: "inception_3a/5x5_reduce_p"
  param {
    name: "inception_3a/5x5_reduce_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "inception_3a/5x5_reduce_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 1
    weight_filler {
      type: "xavier"
      std: 0.2
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_3a/relu_5x5_reduce_p"
  type: "ReLU"
  bottom: "inception_3a/5x5_reduce_p"
  top: "inception_3a/5x5_reduce_p"
}
layer {
  name: "inception_3a/5x5_p"
  type: "Convolution"
  bottom: "inception_3a/5x5_reduce_p"
  top: "inception_3a/5x5_p"
  param {
    name: "inception_3a/5x5_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "inception_3a/5x5_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    pad: 2
    kernel_size: 5
    weight_filler {
      type: "xavier"
      std: 0.03
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_3a/relu_5x5_p"
  type: "ReLU"
  bottom: "inception_3a/5x5_p"
  top: "inception_3a/5x5_p"
}
layer {
  name: "inception_3a/pool_p"
  type: "Pooling"
  bottom: "pool2/3x3_s2_p"
  top: "inception_3a/pool_p"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 1
    pad: 1
  }
}
layer {
  name: "inception_3a/pool_proj_p"
  type: "Convolution"
  bottom: "inception_3a/pool_p"
  top: "inception_3a/pool_proj_p"
  param {
    name: "inception_3a/pool_proj_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "inception_3a/pool_proj_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 1
    weight_filler {
      type: "xavier"
      std: 0.1
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_3a/relu_pool_proj_p"
  type: "ReLU"
  bottom: "inception_3a/pool_proj_p"
  top: "inception_3a/pool_proj_p"
}
layer {
  name: "inception_3a/output_p"
  type: "Concat"
  bottom: "inception_3a/1x1_p"
  bottom: "inception_3a/3x3_p"
  bottom: "inception_3a/5x5_p"
  bottom: "inception_3a/pool_proj_p"
  top: "inception_3a/output_p"
}
layer {
  name: "inception_3b/1x1_p"
  type: "Convolution"
  bottom: "inception_3a/output_p"
  top: "inception_3b/1x1_p"
  param {
    name: "inception_3b/1x1_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "inception_3b/1x1_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    kernel_size: 1
    weight_filler {
      type: "xavier"
      std: 0.03
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_3b/relu_1x1_p"
  type: "ReLU"
  bottom: "inception_3b/1x1_p"
  top: "inception_3b/1x1_p"
}
layer {
  name: "inception_3b/3x3_reduce_p"
  type: "Convolution"
  bottom: "inception_3a/output_p"
  top: "inception_3b/3x3_reduce_p"
  param {
    name: "inception_3b/3x3_reduce_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "inception_3b/3x3_reduce_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    kernel_size: 1
    weight_filler {
      type: "xavier"
      std: 0.09
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_3b/relu_3x3_reduce_p"
  type: "ReLU"
  bottom: "inception_3b/3x3_reduce_p"
  top: "inception_3b/3x3_reduce_p"
}
layer {
  name: "inception_3b/3x3_p"
  type: "Convolution"
  bottom: "inception_3b/3x3_reduce_p"
  top: "inception_3b/3x3_p"
  param {
    name: "inception_3b/3x3_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "inception_3b/3x3_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  convolution_param {
    num_output: 192
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
      std: 0.03
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_3b/relu_3x3_p"
  type: "ReLU"
  bottom: "inception_3b/3x3_p"
  top: "inception_3b/3x3_p"
}
layer {
  name: "inception_3b/5x5_reduce_p"
  type: "Convolution"
  bottom: "inception_3a/output_p"
  top: "inception_3b/5x5_reduce_p"
  param {
    name: "inception_3b/5x5_reduce_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "inception_3b/5x5_reduce_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 1
    weight_filler {
      type: "xavier"
      std: 0.2
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_3b/relu_5x5_reduce_p"
  type: "ReLU"
  bottom: "inception_3b/5x5_reduce_p"
  top: "inception_3b/5x5_reduce_p"
}
layer {
  name: "inception_3b/5x5_p"
  type: "Convolution"
  bottom: "inception_3b/5x5_reduce_p"
  top: "inception_3b/5x5_p"
  param {
    name: "inception_3b/5x5_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "inception_3b/5x5_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    pad: 2
    kernel_size: 5
    weight_filler {
      type: "xavier"
      std: 0.03
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_3b/relu_5x5_p"
  type: "ReLU"
  bottom: "inception_3b/5x5_p"
  top: "inception_3b/5x5_p"
}
layer {
  name: "inception_3b/pool_p"
  type: "Pooling"
  bottom: "inception_3a/output_p"
  top: "inception_3b/pool_p"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 1
    pad: 1
  }
}
layer {
  name: "inception_3b/pool_proj_p"
  type: "Convolution"
  bottom: "inception_3b/pool_p"
  top: "inception_3b/pool_proj_p"
  param {
    name: "inception_3b/pool_proj_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "inception_3b/pool_proj_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 1
    weight_filler {
      type: "xavier"
      std: 0.1
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_3b/relu_pool_proj_p"
  type: "ReLU"
  bottom: "inception_3b/pool_proj_p"
  top: "inception_3b/pool_proj_p"
}
layer {
  name: "inception_3b/output_p"
  type: "Concat"
  bottom: "inception_3b/1x1_p"
  bottom: "inception_3b/3x3_p"
  bottom: "inception_3b/5x5_p"
  bottom: "inception_3b/pool_proj_p"
  top: "inception_3b/output_p"
}
layer {
  name: "pool3/3x3_s2_p"
  type: "Pooling"
  bottom: "inception_3b/output_p"
  top: "pool3/3x3_s2_p"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "inception_4a/1x1_p"
  type: "Convolution"
  bottom: "pool3/3x3_s2_p"
  top: "inception_4a/1x1_p"
  param {
    name: "inception_4a/1x1_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "inception_4a/1x1_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  convolution_param {
    num_output: 192
    kernel_size: 1
    weight_filler {
      type: "xavier"
      std: 0.03
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4a/relu_1x1_p"
  type: "ReLU"
  bottom: "inception_4a/1x1_p"
  top: "inception_4a/1x1_p"
}
layer {
  name: "inception_4a/3x3_reduce_p"
  type: "Convolution"
  bottom: "pool3/3x3_s2_p"
  top: "inception_4a/3x3_reduce_p"
  param {
    name: "inception_4a/3x3_reduce_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "inception_4a/3x3_reduce_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    kernel_size: 1
    weight_filler {
      type: "xavier"
      std: 0.09
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4a/relu_3x3_reduce_p"
  type: "ReLU"
  bottom: "inception_4a/3x3_reduce_p"
  top: "inception_4a/3x3_reduce_p"
}
layer {
  name: "inception_4a/3x3_p"
  type: "Convolution"
  bottom: "inception_4a/3x3_reduce_p"
  top: "inception_4a/3x3_p"
  param {
    name: "inception_4a/3x3_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "inception_4a/3x3_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  convolution_param {
    num_output: 208
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
      std: 0.03
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4a/relu_3x3_p"
  type: "ReLU"
  bottom: "inception_4a/3x3_p"
  top: "inception_4a/3x3_p"
}
layer {
  name: "inception_4a/5x5_reduce_p"
  type: "Convolution"
  bottom: "pool3/3x3_s2_p"
  top: "inception_4a/5x5_reduce_p"
  param {
    name: "inception_4a/5x5_reduce_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "inception_4a/5x5_reduce_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 1
    weight_filler {
      type: "xavier"
      std: 0.2
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4a/relu_5x5_reduce_p"
  type: "ReLU"
  bottom: "inception_4a/5x5_reduce_p"
  top: "inception_4a/5x5_reduce_p"
}
layer {
  name: "inception_4a/5x5_p"
  type: "Convolution"
  bottom: "inception_4a/5x5_reduce_p"
  top: "inception_4a/5x5_p"
  param {
    name: "inception_4a/5x5_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "inception_4a/5x5_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  convolution_param {
    num_output: 48
    pad: 2
    kernel_size: 5
    weight_filler {
      type: "xavier"
      std: 0.03
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4a/relu_5x5_p"
  type: "ReLU"
  bottom: "inception_4a/5x5_p"
  top: "inception_4a/5x5_p"
}
layer {
  name: "inception_4a/pool_p"
  type: "Pooling"
  bottom: "pool3/3x3_s2_p"
  top: "inception_4a/pool_p"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 1
    pad: 1
  }
}
layer {
  name: "inception_4a/pool_proj_p"
  type: "Convolution"
  bottom: "inception_4a/pool_p"
  top: "inception_4a/pool_proj_p"
  param {
    name: "inception_4a/pool_proj_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "inception_4a/pool_proj_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 1
    weight_filler {
      type: "xavier"
      std: 0.1
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4a/relu_pool_proj_p"
  type: "ReLU"
  bottom: "inception_4a/pool_proj_p"
  top: "inception_4a/pool_proj_p"
}
layer {
  name: "inception_4a/output_p"
  type: "Concat"
  bottom: "inception_4a/1x1_p"
  bottom: "inception_4a/3x3_p"
  bottom: "inception_4a/5x5_p"
  bottom: "inception_4a/pool_proj_p"
  top: "inception_4a/output_p"
}
layer {
  name: "loss1/ave_pool_p"
  type: "Pooling"
  bottom: "inception_4a/output_p"
  top: "loss1/ave_pool_p"
  pooling_param {
    pool: AVE
    kernel_size: 5
    stride: 3
  }
}
layer {
  name: "loss1/conv_p"
  type: "Convolution"
  bottom: "loss1/ave_pool_p"
  top: "loss1/conv_p"
  param {
    name: "loss1/conv_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "loss1/conv_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    kernel_size: 1
    weight_filler {
      type: "xavier"
      std: 0.08
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "loss1/relu_conv_p"
  type: "ReLU"
  bottom: "loss1/conv_p"
  top: "loss1/conv_p"
}
layer {
  name: "loss1/fc_p"
  type: "InnerProduct"
  bottom: "loss1/conv_p"
  top: "loss1/fc_p"
  param {
    name: "loss1/fc_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "loss1/fc_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  inner_product_param {
    num_output: 1024
    weight_filler {
      type: "xavier"
      std: 0.02
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "loss1/relu_fc_p"
  type: "ReLU"
  bottom: "loss1/fc_p"
  top: "loss1/fc_p"
}
layer {
  name: "loss1/drop_fc_p"
  type: "Dropout"
  bottom: "loss1/fc_p"
  top: "loss1/fc_p"
  dropout_param {
    dropout_ratio: 0.7
  }
}
layer {
  name: "loss1/classifier_p"
  type: "InnerProduct"
  bottom: "loss1/fc_p"
  top: "loss1/classifier_p"
  param {
    name: "loss1/classifier_w"
    lr_mult: 1 # id first
    decay_mult: 1
  }
  param {
    name: "loss1/classifier_b"
    lr_mult: 2 # id second
    decay_mult: 0
  }
  inner_product_param {
    num_output: 128
    weight_filler {
      type: "xavier"
      std: 0.00009765625
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "deepid_1_p"
  type: "TanH"
  bottom: "loss1/classifier_p"
  top: "deepid_1_p"
}
layer {
  name: "inception_4b/1x1_p"
  type: "Convolution"
  bottom: "inception_4a/output_p"
  top: "inception_4b/1x1_p"
  param {
    name: "inception_4b/1x1_w"
    lr_mult: 1 # id first
    decay_mult: 1
  }
  param {
    name: "inception_4b/1x1_b"
    lr_mult: 2 # id second
    decay_mult: 0
  }
  convolution_param {
    num_output: 160
    kernel_size: 1
    weight_filler {
      type: "xavier"
      std: 0.03
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4b/relu_1x1_p"
  type: "ReLU"
  bottom: "inception_4b/1x1_p"
  top: "inception_4b/1x1_p"
}
layer {
  name: "inception_4b/3x3_reduce_p"
  type: "Convolution"
  bottom: "inception_4a/output_p"
  top: "inception_4b/3x3_reduce_p"
  param {
    name: "inception_4b/3x3_reduce_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "inception_4b/3x3_reduce_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  convolution_param {
    num_output: 112
    kernel_size: 1
    weight_filler {
      type: "xavier"
      std: 0.09
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4b/relu_3x3_reduce_p"
  type: "ReLU"
  bottom: "inception_4b/3x3_reduce_p"
  top: "inception_4b/3x3_reduce_p"
}
layer {
  name: "inception_4b/3x3_p"
  type: "Convolution"
  bottom: "inception_4b/3x3_reduce_p"
  top: "inception_4b/3x3_p"
  param {
    name: "inception_4b/3x3_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "inception_4b/3x3_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  convolution_param {
    num_output: 224
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
      std: 0.03
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4b/relu_3x3_p"
  type: "ReLU"
  bottom: "inception_4b/3x3_p"
  top: "inception_4b/3x3_p"
}
layer {
  name: "inception_4b/5x5_reduce_p"
  type: "Convolution"
  bottom: "inception_4a/output_p"
  top: "inception_4b/5x5_reduce_p"
  param {
    name: "inception_4b/5x5_reduce_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "inception_4b/5x5_reduce_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  convolution_param {
    num_output: 24
    kernel_size: 1
    weight_filler {
      type: "xavier"
      std: 0.2
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4b/relu_5x5_reduce_p"
  type: "ReLU"
  bottom: "inception_4b/5x5_reduce_p"
  top: "inception_4b/5x5_reduce_p"
}
layer {
  name: "inception_4b/5x5_p"
  type: "Convolution"
  bottom: "inception_4b/5x5_reduce_p"
  top: "inception_4b/5x5_p"
  param {
    name: "inception_4b/5x5_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "inception_4b/5x5_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 2
    kernel_size: 5
    weight_filler {
      type: "xavier"
      std: 0.03
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4b/relu_5x5_p"
  type: "ReLU"
  bottom: "inception_4b/5x5_p"
  top: "inception_4b/5x5_p"
}
layer {
  name: "inception_4b/pool_p"
  type: "Pooling"
  bottom: "inception_4a/output_p"
  top: "inception_4b/pool_p"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 1
    pad: 1
  }
}
layer {
  name: "inception_4b/pool_proj_p"
  type: "Convolution"
  bottom: "inception_4b/pool_p"
  top: "inception_4b/pool_proj_p"
  param {
    name: "inception_4b/pool_proj_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "inception_4b/pool_proj_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 1
    weight_filler {
      type: "xavier"
      std: 0.1
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4b/relu_pool_proj_p"
  type: "ReLU"
  bottom: "inception_4b/pool_proj_p"
  top: "inception_4b/pool_proj_p"
}
layer {
  name: "inception_4b/output_p"
  type: "Concat"
  bottom: "inception_4b/1x1_p"
  bottom: "inception_4b/3x3_p"
  bottom: "inception_4b/5x5_p"
  bottom: "inception_4b/pool_proj_p"
  top: "inception_4b/output_p"
}
layer {
  name: "inception_4c/1x1_p"
  type: "Convolution"
  bottom: "inception_4b/output_p"
  top: "inception_4c/1x1_p"
  param {
    name: "inception_4c/1x1_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "inception_4c/1x1_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    kernel_size: 1
    weight_filler {
      type: "xavier"
      std: 0.03
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4c/relu_1x1_p"
  type: "ReLU"
  bottom: "inception_4c/1x1_p"
  top: "inception_4c/1x1_p"
}
layer {
  name: "inception_4c/3x3_reduce_p"
  type: "Convolution"
  bottom: "inception_4b/output_p"
  top: "inception_4c/3x3_reduce_p"
  param {
    name: "inception_4c/3x3_reduce_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "inception_4c/3x3_reduce_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    kernel_size: 1
    weight_filler {
      type: "xavier"
      std: 0.09
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4c/relu_3x3_reduce_p"
  type: "ReLU"
  bottom: "inception_4c/3x3_reduce_p"
  top: "inception_4c/3x3_reduce_p"
}
layer {
  name: "inception_4c/3x3_p"
  type: "Convolution"
  bottom: "inception_4c/3x3_reduce_p"
  top: "inception_4c/3x3_p"
  param {
    name: "inception_4c/3x3_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "inception_4c/3x3_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
      std: 0.03
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4c/relu_3x3_p"
  type: "ReLU"
  bottom: "inception_4c/3x3_p"
  top: "inception_4c/3x3_p"
}
layer {
  name: "inception_4c/5x5_reduce_p"
  type: "Convolution"
  bottom: "inception_4b/output_p"
  top: "inception_4c/5x5_reduce_p"
  param {
    name: "inception_4c/5x5_reduce_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "inception_4c/5x5_reduce_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  convolution_param {
    num_output: 24
    kernel_size: 1
    weight_filler {
      type: "xavier"
      std: 0.2
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4c/relu_5x5_reduce_p"
  type: "ReLU"
  bottom: "inception_4c/5x5_reduce_p"
  top: "inception_4c/5x5_reduce_p"
}
layer {
  name: "inception_4c/5x5_p"
  type: "Convolution"
  bottom: "inception_4c/5x5_reduce_p"
  top: "inception_4c/5x5_p"
  param {
    name: "inception_4c/5x5_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "inception_4c/5x5_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 2
    kernel_size: 5
    weight_filler {
      type: "xavier"
      std: 0.03
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4c/relu_5x5_p"
  type: "ReLU"
  bottom: "inception_4c/5x5_p"
  top: "inception_4c/5x5_p"
}
layer {
  name: "inception_4c/pool_p"
  type: "Pooling"
  bottom: "inception_4b/output_p"
  top: "inception_4c/pool_p"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 1
    pad: 1
  }
}
layer {
  name: "inception_4c/pool_proj_p"
  type: "Convolution"
  bottom: "inception_4c/pool_p"
  top: "inception_4c/pool_proj_p"
  param {
    name: "inception_4c/pool_proj_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "inception_4c/pool_proj_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 1
    weight_filler {
      type: "xavier"
      std: 0.1
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4c/relu_pool_proj_p"
  type: "ReLU"
  bottom: "inception_4c/pool_proj_p"
  top: "inception_4c/pool_proj_p"
}
layer {
  name: "inception_4c/output_p"
  type: "Concat"
  bottom: "inception_4c/1x1_p"
  bottom: "inception_4c/3x3_p"
  bottom: "inception_4c/5x5_p"
  bottom: "inception_4c/pool_proj_p"
  top: "inception_4c/output_p"
}
layer {
  name: "inception_4d/1x1_p"
  type: "Convolution"
  bottom: "inception_4c/output_p"
  top: "inception_4d/1x1_p"
  param {
    name: "inception_4d/1x1_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "inception_4d/1x1_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  convolution_param {
    num_output: 112
    kernel_size: 1
    weight_filler {
      type: "xavier"
      std: 0.03
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4d/relu_1x1_p"
  type: "ReLU"
  bottom: "inception_4d/1x1_p"
  top: "inception_4d/1x1_p"
}
layer {
  name: "inception_4d/3x3_reduce_p"
  type: "Convolution"
  bottom: "inception_4c/output_p"
  top: "inception_4d/3x3_reduce_p"
  param {
    name: "inception_4d/3x3_reduce_w" 
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "inception_4d/3x3_reduce_b" 
    lr_mult: 2 # second
    decay_mult: 0
  }
  convolution_param {
    num_output: 144
    kernel_size: 1
    weight_filler {
      type: "xavier"
      std: 0.09
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4d/relu_3x3_reduce_p"
  type: "ReLU"
  bottom: "inception_4d/3x3_reduce_p"
  top: "inception_4d/3x3_reduce_p"
}
layer {
  name: "inception_4d/3x3_p"
  type: "Convolution"
  bottom: "inception_4d/3x3_reduce_p"
  top: "inception_4d/3x3_p"
  param {
    name: "inception_4d/3x3_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "inception_4d/3x3_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  convolution_param {
    num_output: 288
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
      std: 0.03
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4d/relu_3x3_p"
  type: "ReLU"
  bottom: "inception_4d/3x3_p"
  top: "inception_4d/3x3_p"
}
layer {
  name: "inception_4d/5x5_reduce_p"
  type: "Convolution"
  bottom: "inception_4c/output_p"
  top: "inception_4d/5x5_reduce_p"
  param {
    name: "inception_4d/5x5_reduce_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "inception_4d/5x5_reduce_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 1
    weight_filler {
      type: "xavier"
      std: 0.2
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4d/relu_5x5_reduce_p"
  type: "ReLU"
  bottom: "inception_4d/5x5_reduce_p"
  top: "inception_4d/5x5_reduce_p"
}
layer {
  name: "inception_4d/5x5_p"
  type: "Convolution"
  bottom: "inception_4d/5x5_reduce_p"
  top: "inception_4d/5x5_p"
  param {
    name: "inception_4d/5x5_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "inception_4d/5x5_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 2
    kernel_size: 5
    weight_filler {
      type: "xavier"
      std: 0.03
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4d/relu_5x5_p"
  type: "ReLU"
  bottom: "inception_4d/5x5_p"
  top: "inception_4d/5x5_p"
}
layer {
  name: "inception_4d/pool_p"
  type: "Pooling"
  bottom: "inception_4c/output_p"
  top: "inception_4d/pool_p"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 1
    pad: 1
  }
}
layer {
  name: "inception_4d/pool_proj_p"
  type: "Convolution"
  bottom: "inception_4d/pool_p"
  top: "inception_4d/pool_proj_p"
  param {
    name: "inception_4d/pool_proj_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "inception_4d/pool_proj_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 1
    weight_filler {
      type: "xavier"
      std: 0.1
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4d/relu_pool_proj_p"
  type: "ReLU"
  bottom: "inception_4d/pool_proj_p"
  top: "inception_4d/pool_proj_p"
}
layer {
  name: "inception_4d/output_p"
  type: "Concat"
  bottom: "inception_4d/1x1_p"
  bottom: "inception_4d/3x3_p"
  bottom: "inception_4d/5x5_p"
  bottom: "inception_4d/pool_proj_p"
  top: "inception_4d/output_p"
}
layer {
  name: "loss2/ave_pool_p"
  type: "Pooling"
  bottom: "inception_4d/output_p"
  top: "loss2/ave_pool_p"
  pooling_param {
    pool: AVE
    kernel_size: 5
    stride: 3
  }
}
layer {
  name: "loss2/conv_p"
  type: "Convolution"
  bottom: "loss2/ave_pool_p"
  top: "loss2/conv_p"
  param {
    name: "loss2/conv_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "loss2/conv_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    kernel_size: 1
    weight_filler {
      type: "xavier"
      std: 0.08
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "loss2/relu_conv_p"
  type: "ReLU"
  bottom: "loss2/conv_p"
  top: "loss2/conv_p"
}
layer {
  name: "loss2/fc_p"
  type: "InnerProduct"
  bottom: "loss2/conv_p"
  top: "loss2/fc_p"
  param {
    name: "loss2/fc_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "loss2/fc_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  inner_product_param {
    num_output: 1024
    weight_filler {
      type: "xavier"
      std: 0.02
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "loss2/relu_fc_p"
  type: "ReLU"
  bottom: "loss2/fc_p"
  top: "loss2/fc_p"
}
layer {
  name: "loss2/drop_fc_p"
  type: "Dropout"
  bottom: "loss2/fc_p"
  top: "loss2/fc_p"
  dropout_param {
    dropout_ratio: 0.7
  }
}
layer {
  name: "loss2/classifier_p"
  type: "InnerProduct"
  bottom: "loss2/fc_p"
  top: "loss2/classifier_p"
  param {
    name: "loss2/classifier_w"
    lr_mult: 1 # id first
    decay_mult: 1
  }
  param {
    name: "loss2/classifier_b"
    lr_mult: 2 # id second
    decay_mult: 0
  }
  inner_product_param {
    num_output: 128
    weight_filler {
      type: "xavier"
      std: 0.00009765625
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "deepid_2_p"
  type: "TanH"
  bottom: "loss2/classifier_p"
  top: "deepid_2_p"
}
layer {
  name: "inception_4e/1x1_p"
  type: "Convolution"
  bottom: "inception_4d/output_p"
  top: "inception_4e/1x1_p"
  param {
    name: "inception_4e/1x1_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "inception_4e/1x1_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    kernel_size: 1
    weight_filler {
      type: "xavier"
      std: 0.03
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4e/relu_1x1_p"
  type: "ReLU"
  bottom: "inception_4e/1x1_p"
  top: "inception_4e/1x1_p"
}
layer {
  name: "inception_4e/3x3_reduce_p"
  type: "Convolution"
  bottom: "inception_4d/output_p"
  top: "inception_4e/3x3_reduce_p"
  param {
    name: "inception_4e/3x3_reduce_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "inception_4e/3x3_reduce_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  convolution_param {
    num_output: 160
    kernel_size: 1
    weight_filler {
      type: "xavier"
      std: 0.09
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4e/relu_3x3_reduce_p"
  type: "ReLU"
  bottom: "inception_4e/3x3_reduce_p"
  top: "inception_4e/3x3_reduce_p"
}
layer {
  name: "inception_4e/3x3_p"
  type: "Convolution"
  bottom: "inception_4e/3x3_reduce_p"
  top: "inception_4e/3x3_p"
  param {
    name: "inception_4e/3x3_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "inception_4e/3x3_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  convolution_param {
    num_output: 320
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
      std: 0.03
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4e/relu_3x3_p"
  type: "ReLU"
  bottom: "inception_4e/3x3_p"
  top: "inception_4e/3x3_p"
}
layer {
  name: "inception_4e/5x5_reduce_p"
  type: "Convolution"
  bottom: "inception_4d/output_p"
  top: "inception_4e/5x5_reduce_p"
  param {
    name: "inception_4e/5x5_reduce_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "inception_4e/5x5_reduce_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 1
    weight_filler {
      type: "xavier"
      std: 0.2
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4e/relu_5x5_reduce_p"
  type: "ReLU"
  bottom: "inception_4e/5x5_reduce_p"
  top: "inception_4e/5x5_reduce_p"
}
layer {
  name: "inception_4e/5x5_p"
  type: "Convolution"
  bottom: "inception_4e/5x5_reduce_p"
  top: "inception_4e/5x5_p"
  param {
    name: "inception_4e/5x5_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "inception_4e/5x5_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 2
    kernel_size: 5
    weight_filler {
      type: "xavier"
      std: 0.03
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4e/relu_5x5_p"
  type: "ReLU"
  bottom: "inception_4e/5x5_p"
  top: "inception_4e/5x5_p"
}
layer {
  name: "inception_4e/pool_p"
  type: "Pooling"
  bottom: "inception_4d/output_p"
  top: "inception_4e/pool_p"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 1
    pad: 1
  }
}
layer {
  name: "inception_4e/pool_proj_p"
  type: "Convolution"
  bottom: "inception_4e/pool_p"
  top: "inception_4e/pool_proj_p"
  param {
    name: "inception_4e/pool_proj_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "inception_4e/pool_proj_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    kernel_size: 1
    weight_filler {
      type: "xavier"
      std: 0.1
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4e/relu_pool_proj_p"
  type: "ReLU"
  bottom: "inception_4e/pool_proj_p"
  top: "inception_4e/pool_proj_p"
}
layer {
  name: "inception_4e/output_p"
  type: "Concat"
  bottom: "inception_4e/1x1_p"
  bottom: "inception_4e/3x3_p"
  bottom: "inception_4e/5x5_p"
  bottom: "inception_4e/pool_proj_p"
  top: "inception_4e/output_p"
}
layer {
  name: "pool4/3x3_s2_p"
  type: "Pooling"
  bottom: "inception_4e/output_p"
  top: "pool4/3x3_s2_p"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "inception_5a/1x1_p"
  type: "Convolution"
  bottom: "pool4/3x3_s2_p"
  top: "inception_5a/1x1_p"
  param {
    name: "inception_5a/1x1_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "inception_5a/1x1_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    kernel_size: 1
    weight_filler {
      type: "xavier"
      std: 0.03
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_5a/relu_1x1_p"
  type: "ReLU"
  bottom: "inception_5a/1x1_p"
  top: "inception_5a/1x1_p"
}
layer {
  name: "inception_5a/3x3_reduce_p"
  type: "Convolution"
  bottom: "pool4/3x3_s2_p"
  top: "inception_5a/3x3_reduce_p"
  param {
    name: "inception_5a/3x3_reduce_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "inception_5a/3x3_reduce_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  convolution_param {
    num_output: 160
    kernel_size: 1
    weight_filler {
      type: "xavier"
      std: 0.09
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_5a/relu_3x3_reduce_p"
  type: "ReLU"
  bottom: "inception_5a/3x3_reduce_p"
  top: "inception_5a/3x3_reduce_p"
}
layer {
  name: "inception_5a/3x3_p"
  type: "Convolution"
  bottom: "inception_5a/3x3_reduce_p"
  top: "inception_5a/3x3_p"
  param {
    name: "inception_5a/3x3_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "inception_5a/3x3_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  convolution_param {
    num_output: 320
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
      std: 0.03
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_5a/relu_3x3_p"
  type: "ReLU"
  bottom: "inception_5a/3x3_p"
  top: "inception_5a/3x3_p"
}
layer {
  name: "inception_5a/5x5_reduce_p"
  type: "Convolution"
  bottom: "pool4/3x3_s2_p"
  top: "inception_5a/5x5_reduce_p"
  param {
    name: "inception_5a/5x5_reduce_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "inception_5a/5x5_reduce_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 1
    weight_filler {
      type: "xavier"
      std: 0.2
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_5a/relu_5x5_reduce_p"
  type: "ReLU"
  bottom: "inception_5a/5x5_reduce_p"
  top: "inception_5a/5x5_reduce_p"
}
layer {
  name: "inception_5a/5x5_p"
  type: "Convolution"
  bottom: "inception_5a/5x5_reduce_p"
  top: "inception_5a/5x5_p"
  param {
    name: "inception_5a/5x5_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "inception_5a/5x5_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 2
    kernel_size: 5
    weight_filler {
      type: "xavier"
      std: 0.03
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_5a/relu_5x5_p"
  type: "ReLU"
  bottom: "inception_5a/5x5_p"
  top: "inception_5a/5x5_p"
}
layer {
  name: "inception_5a/pool_p"
  type: "Pooling"
  bottom: "pool4/3x3_s2_p"
  top: "inception_5a/pool_p"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 1
    pad: 1
  }
}
layer {
  name: "inception_5a/pool_proj_p"
  type: "Convolution"
  bottom: "inception_5a/pool_p"
  top: "inception_5a/pool_proj_p"
  param {
    name: "inception_5a/pool_proj_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "inception_5a/pool_proj_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    kernel_size: 1
    weight_filler {
      type: "xavier"
      std: 0.1
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_5a/relu_pool_proj_p"
  type: "ReLU"
  bottom: "inception_5a/pool_proj_p"
  top: "inception_5a/pool_proj_p"
}
layer {
  name: "inception_5a/output_p"
  type: "Concat"
  bottom: "inception_5a/1x1_p"
  bottom: "inception_5a/3x3_p"
  bottom: "inception_5a/5x5_p"
  bottom: "inception_5a/pool_proj_p"
  top: "inception_5a/output_p"
}
layer {
  name: "inception_5b/1x1_p"
  type: "Convolution"
  bottom: "inception_5a/output_p"
  top: "inception_5b/1x1_p"
  param {
    name: "inception_5b/1x1_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "inception_5b/1x1_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    kernel_size: 1
    weight_filler {
      type: "xavier"
      std: 0.03
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_5b/relu_1x1_p"
  type: "ReLU"
  bottom: "inception_5b/1x1_p"
  top: "inception_5b/1x1_p"
}
layer {
  name: "inception_5b/3x3_reduce_p"
  type: "Convolution"
  bottom: "inception_5a/output_p"
  top: "inception_5b/3x3_reduce_p"
  param {
    name: "inception_5b/3x3_reduce_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "inception_5b/3x3_reduce_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  convolution_param {
    num_output: 192
    kernel_size: 1
    weight_filler {
      type: "xavier"
      std: 0.09
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_5b/relu_3x3_reduce_p"
  type: "ReLU"
  bottom: "inception_5b/3x3_reduce_p"
  top: "inception_5b/3x3_reduce_p"
}
layer {
  name: "inception_5b/3x3_p"
  type: "Convolution"
  bottom: "inception_5b/3x3_reduce_p"
  top: "inception_5b/3x3_p"
  param {
    name: "inception_5b/3x3_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "inception_5b/3x3_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
      std: 0.03
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_5b/relu_3x3_p"
  type: "ReLU"
  bottom: "inception_5b/3x3_p"
  top: "inception_5b/3x3_p"
}
layer {
  name: "inception_5b/5x5_reduce_p"
  type: "Convolution"
  bottom: "inception_5a/output_p"
  top: "inception_5b/5x5_reduce_p"
  param {
    name: "inception_5b/5x5_reduce_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "inception_5b/5x5_reduce_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  convolution_param {
    num_output: 48
    kernel_size: 1
    weight_filler {
      type: "xavier"
      std: 0.2
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_5b/relu_5x5_reduce_p"
  type: "ReLU"
  bottom: "inception_5b/5x5_reduce_p"
  top: "inception_5b/5x5_reduce_p"
}
layer {
  name: "inception_5b/5x5_p"
  type: "Convolution"
  bottom: "inception_5b/5x5_reduce_p"
  top: "inception_5b/5x5_p"
  param {
    name: "inception_5b/5x5_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "inception_5b/5x5_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 2
    kernel_size: 5
    weight_filler {
      type: "xavier"
      std: 0.03
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_5b/relu_5x5_p"
  type: "ReLU"
  bottom: "inception_5b/5x5_p"
  top: "inception_5b/5x5_p"
}
layer {
  name: "inception_5b/pool_p"
  type: "Pooling"
  bottom: "inception_5a/output_p"
  top: "inception_5b/pool_p"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 1
    pad: 1
  }
}
layer {
  name: "inception_5b/pool_proj_p"
  type: "Convolution"
  bottom: "inception_5b/pool_p"
  top: "inception_5b/pool_proj_p"
  param {
    name: "inception_5b/pool_proj_w"
    lr_mult: 1 # first
    decay_mult: 1
  }
  param {
    name: "inception_5b/pool_proj_b"
    lr_mult: 2 # second
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    kernel_size: 1
    weight_filler {
      type: "xavier"
      std: 0.1
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_5b/relu_pool_proj_p"
  type: "ReLU"
  bottom: "inception_5b/pool_proj_p"
  top: "inception_5b/pool_proj_p"
}
layer {
  name: "inception_5b/output_p"
  type: "Concat"
  bottom: "inception_5b/1x1_p"
  bottom: "inception_5b/3x3_p"
  bottom: "inception_5b/5x5_p"
  bottom: "inception_5b/pool_proj_p"
  top: "inception_5b/output_p"
}
layer {
  name: "pool5/7x7_s1_p"
  type: "Pooling"
  bottom: "inception_5b/output_p"
  top: "pool5/7x7_s1_p"
  pooling_param {
    pool: AVE
    kernel_size: 7
    stride: 1
  }
}
layer {
  name: "pool5/drop_7x7_s1_p"
  type: "Dropout"
  bottom: "pool5/7x7_s1_p"
  top: "pool5/7x7_s1_p"
  dropout_param {
    dropout_ratio: 0.4
  }
}
layer {
  name: "deepid_base512_p"
  type: "InnerProduct"
  bottom: "pool5/7x7_s1_p"
  top: "deepid_base512_p"
  param {
    name: "id_w"
    lr_mult: 1 # id first
    decay_mult: 1
  }
  param {
    name: "id_b"
    lr_mult: 2 # id second
    decay_mult: 0
  }
  inner_product_param {
    num_output: 512
    weight_filler {
      type: "xavier"
      std: 0.00009765625
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "deepid_encode512_p"
  type: "TanH"
  bottom: "deepid_base512_p"
  top: "deepid_encode512_p"
}

# ------------------------------------------ out info ------------------------------------------
#layer {
#  name: "concat_out"
#  type: "Concat"
#  bottom: "deepid_encode512"
#  bottom: "deepid_encode512_p"
##  bottom: "deepid_1"
##  bottom: "deepid_1_p"
##  bottom: "deepid_2"
##  bottom: "deepid_2_p"
#  top: "concat_out"
#}
#layer {
#  name: "diff_calc"
#  type: "InnerProduct"
#  bottom: "concat_out"
#  top: "diff_calc"
#  param {
#    lr_mult: 1 # first0
#    decay_mult: 1
#  }
#  param {
#    lr_mult: 2
#    decay_mult: 0
#  }
#  inner_product_param {
#    num_output: 4096
#    weight_filler {
#      type: "xavier"
#      std: 0.003
#    }
#    bias_filler {
#      type: "constant"
#      value: 0
#    }
#  }
#}
#layer {
#  name: "relu_calc"
#  type: "ReLU"
#  bottom: "diff_calc"
#  top: "diff_calc"
#}
#layer {
#  name: "drop_calc"
#  type: "Dropout"
#  bottom: "diff_calc"
#  top: "diff_calc"
#  dropout_param {
#    dropout_ratio: 0.5
#  }
#}
#layer {
#  name: "diff_calc2"
#  type: "InnerProduct"
#  bottom: "diff_calc"
#  top: "diff_calc2"
#  param {
#    lr_mult: 1 # first0
#    decay_mult: 1
#  }
#  param {
#    lr_mult: 2
#    decay_mult: 0
#  }
#  inner_product_param {
#    num_output: 2048
#    weight_filler {
#      type: "xavier"
#      std: 0.003
#    }
#    bias_filler {
#      type: "constant"
#      value: 0
#    }
#  }
#}
#layer {
#  name: "relu_calc2"
#  type: "ReLU"
#  bottom: "diff_calc2"
#  top: "diff_calc2"
#}
#layer {
#  name: "drop_calc2"
#  type: "Dropout"
#  bottom: "diff_calc2"
#  top: "diff_calc2"
#  dropout_param {
#    dropout_ratio: 0.5
#  }
#}
#layer {
#  name: "diff"
#  type: "InnerProduct"
#  bottom: "diff_calc2"
#  top: "diff"
#  param {
#    lr_mult: 1 # first0
#    decay_mult: 1
#  }
#  param {
#    lr_mult: 2
#    decay_mult: 0
#  }
#  inner_product_param {
#    num_output: 2
#    weight_filler {
#      type: "xavier"
#      std: 0.0009765625
#    }
#    bias_filler {
#      type: "constant"
#      value: 0
#    }
#  }
#}
#layer {
#  name: "accuracy"
#  type: "Accuracy"
#  bottom: "diff"
#  bottom: "sim"
#  top: "accuracy"
#  include {
#    phase: TEST
#  }
#}
#layer {
#  name: "loss_acc"
#  type: "SoftmaxWithLoss"
#  bottom: "diff"
#  bottom: "sim"
#  top: "loss_acc"
#  loss_weight: 1
#}
layer {
  name: "loss"
  type: "ContrastiveLoss"
  bottom: "deepid_encode512"
  bottom: "deepid_encode512_p"
  bottom: "sim"
  top: "loss"
  loss_weight: 1
  contrastive_loss_param {
    margin: 1
  }
}
layer {
  name: "loss2"
  type: "ContrastiveLoss"
  bottom: "deepid_1"
  bottom: "deepid_1_p"
  bottom: "sim"
  top: "loss2"
  loss_weight: 0.3
  contrastive_loss_param {
    margin: 1
  }
}
layer {
  name: "loss3"
  type: "ContrastiveLoss"
  bottom: "deepid_2"
  bottom: "deepid_2_p"
  bottom: "sim"
  top: "loss3"
  loss_weight: 0.3
  contrastive_loss_param {
    margin: 1
  }
}
layer {
  name: "classifier1"
  type: "InnerProduct"
  bottom: "deepid_encode512"
  top: "classifier1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 8000
    weight_filler {
      type: "xavier"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_class"
  type: "SoftmaxWithLoss"
  bottom: "classifier1"
  bottom: "m_id"
  top: "loss_class"
  loss_weight: 1
}
layer {
  name: "accuracy_class"
  type: "Accuracy"
  bottom: "classifier1"
  bottom: "m_id"
  top: "accuracy_class"
#  include {
#    phase: TEST
#  }
}
layer {
  name: "classifier2"
  type: "InnerProduct"
  bottom: "deepid_1"
  top: "classifier2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 8000
    weight_filler {
      type: "xavier"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_class2"
  type: "SoftmaxWithLoss"
  bottom: "classifier2"
  bottom: "m_id"
  top: "loss_class2"
  loss_weight: 0.3
}
layer {
  name: "accuracy_class2"
  type: "Accuracy"
  bottom: "classifier2"
  bottom: "m_id"
  top: "accuracy_class2"
  include {
    phase: TEST
  }
}
layer {
  name: "classifier3"
  type: "InnerProduct"
  bottom: "deepid_2"
  top: "classifier3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 8000
    weight_filler {
      type: "xavier"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_class3"
  type: "SoftmaxWithLoss"
  bottom: "classifier3"
  bottom: "m_id"
  top: "loss_class3"
  loss_weight: 0.3
}
layer {
  name: "accuracy_class3"
  type: "Accuracy"
  bottom: "classifier3"
  bottom: "m_id"
  top: "accuracy_class3"
  include {
    phase: TEST
  }
}

# ------------------------------------------ helper ------------------------------------------
layer {
  name: "flatdata"
  type: "Flatten"
  bottom: "data"
  top: "flatdata"
}
layer {
  name: "helper_prev"
  type: "InnerProduct"
  bottom: "pool4/3x3_s2"
  top: "helper_prev"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 128
    weight_filler {
      type: "xavier"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "helper"
  type: "InnerProduct"
  bottom: "helper_prev"
  top: "helper"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 51529
    weight_filler {
      type: "gaussian"
      std: 1
      sparse: 15
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "helper_sig"
  type: "Sigmoid"
  bottom: "helper"
  top: "helper_sig"
}
layer {
  name: "loss_helper"
  type: "EuclideanLoss"
  bottom: "helper_sig"
  bottom: "flatdata"
  top: "loss_helper"
  loss_weight: 0.01
}
#layer {
#  name: "helper_prev2"
#  type: "InnerProduct"
#  bottom: "pool2/3x3_s2"
#  top: "helper_prev2"
#  param {
#    lr_mult: 1
#    decay_mult: 1
#  }
#  param {
#    lr_mult: 2
#    decay_mult: 0
#  }
#  inner_product_param {
#    num_output: 128
#    weight_filler {
#      type: "xavier"
#      std: 0.001
#    }
#    bias_filler {
#      type: "constant"
#      value: 0
#    }
#  }
#}
#layer {
#  name: "helper2"
#  type: "InnerProduct"
#  bottom: "helper_prev2"
#  top: "helper2"
#  param {
#    lr_mult: 1
#    decay_mult: 1
#  }
#  param {
#    lr_mult: 2
#    decay_mult: 0
#  }
#  inner_product_param {
#    num_output: 51529
#    weight_filler {
#      type: "gaussian"
#      std: 1
#      sparse: 15
#    }
#    bias_filler {
#      type: "constant"
#      value: 0
#    }
#  }
#}
#layer {
#  name: "helper_sig2"
#  type: "Sigmoid"
#  bottom: "helper2"
#  top: "helper_sig2"
#}
#layer {
#  name: "loss_helper2"
#  type: "EuclideanLoss"
#  bottom: "helper_sig2"
#  bottom: "flatdata"
#  top: "loss_helper2"
#  loss_weight: 0.03
#}
#layer {
#  name: "helper_prev3"
#  type: "InnerProduct"
#  bottom: "pool3/3x3_s2"
#  top: "helper_prev3"
#  param {
#    lr_mult: 1
#    decay_mult: 1
#  }
#  param {
#    lr_mult: 2
#    decay_mult: 0
#  }
#  inner_product_param {
#    num_output: 128
#    weight_filler {
#      type: "xavier"
#      std: 0.001
#    }
#    bias_filler {
#      type: "constant"
#      value: 0
#    }
#  }
#}
#layer {
#  name: "helper3"
#  type: "InnerProduct"
#  bottom: "helper_prev3"
#  top: "helper3"
#  param {
#    lr_mult: 1
#    decay_mult: 1
#  }
#  param {
#    lr_mult: 2
#    decay_mult: 0
#  }
#  inner_product_param {
#    num_output: 51529
#    weight_filler {
#      type: "gaussian"
#      std: 1
#      sparse: 15
#    }
#    bias_filler {
#      type: "constant"
#      value: 0
#    }
#  }
#}
#layer {
#  name: "helper_sig3"
#  type: "Sigmoid"
#  bottom: "helper3"
#  top: "helper_sig3"
#}
#layer {
#  name: "loss_helper3"
#  type: "EuclideanLoss"
#  bottom: "helper_sig3"
#  bottom: "flatdata"
#  top: "loss_helper3"
#  loss_weight: 0.02
#}
# ------------------------------------------ none use ------------------------------------------
layer {
  name: "none1"
  type: "InnerProduct"
  bottom: "m_else"
  top: "none1"
  param {
    lr_mult: 0
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  inner_product_param {
    num_output: 1
    weight_filler {
      type: "gaussian"
      std: 0.003
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_none"
  type: "SoftmaxWithLoss"
  bottom: "none1"
  bottom: "sim"
  top: "loss_none"
  loss_weight: 0
}
